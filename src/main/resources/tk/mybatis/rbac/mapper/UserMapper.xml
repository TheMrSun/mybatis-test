<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="tk.mybatis.rbac.mapper.UserMapper">

    <resultMap id="sysUser" type="tk.mybatis.rbac.model.SysUser">
        <result property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>


    <resultMap id="userRoleMap" extends="sysUser" type="tk.mybatis.rbac.model.SysUser">
        <association property="role" columnPrefix="role_" javaType="tk.mybatis.rbac.model.SysRole"
                     resultMap="tk.mybatis.rbac.mapper.RoleMapper.roleMap">
        </association>
    </resultMap>


    <resultMap id="userRoleMapSelect" extends="sysUser" type="tk.mybatis.rbac.model.SysUser">
        <association property="role" column="{id=role_id}" fetchType="lazy"
                     select="tk.mybatis.rbac.mapper.RoleMapper.selectRoleById" />
    </resultMap>

    <resultMap id="userRoleListMap" extends="sysUser" type="tk.mybatis.rbac.model.SysUser">
        <collection property="roleList" columnPrefix="role_"
                    resultMap="tk.mybatis.rbac.mapper.RoleMapper.roleMap"/>
    </resultMap>

    <resultMap id="userRolePrivilegeListMap" extends="sysUser" type="tk.mybatis.rbac.model.SysUser">
        <collection property="roleList" columnPrefix="role_"
                    resultMap="tk.mybatis.rbac.mapper.RoleMapper.rolePrivilegeListMap"/>
    </resultMap>




    <select id="selectById" resultMap="sysUser">
        select * from sys_user where id = #{id}
    </select>


    <select id="selectAll" resultType="tk.mybatis.rbac.model.SysUser">
        select
        id,
        user_name userName,
        user_password userPassword,
        user_email userEmail,
        user_info userInfo,
        head_img headImg,
        create_time createTime
        from
        sys_user
    </select>

    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user
        (user_name,user_password,user_email,user_info,head_img,create_time)
        value
        (
            #{userName},
            #{userPassword},
            #{userEmail},
            #{userInfo},
            #{headImg,jdbcType=BLOB},
            #{createTime,jdbcType=TIMESTAMP}
        )
    </insert>


    <insert id="insertUser2" >
        insert into sys_user
        (user_name,user_password,user_email,user_info,head_img,create_time)
        value
        (
            #{userName},
            #{userPassword},
            #{userEmail},
            #{userInfo},
            #{headImg,jdbcType=BLOB},
            #{createTime,jdbcType=TIMESTAMP}
        )
        <selectKey keyColumn="id" resultType="int" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>


    <update id="updateUserById">
        update sys_user
        set
        user_name = #{userName},
        user_password = #{userPassword},
        user_email = #{userEmail},
        user_info = #{userInfo},
        head_img = #{headImg,jdbcType=BLOB},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        where
        id = #{id}
    </update>

    <select id="selectUserAndRoleById" resultMap="userRoleMap">
        select
        u.id,
        u.user_name,
        u.user_password ,
        u.user_email,
        u.user_info ,
        u.head_img ,
        u.create_time,
        role.id role_id,
        role.role_name role_role_name,
        role.enabled role_enabled,
        role.create_by role_create_by,
        role.create_time role_create_time
        from sys_user u
        inner join sys_user_role user_role on user_role.user_id = u.id
        inner join sys_role role on role.id = user_role.role_id
        where
        u.id = #{userId}
        and role.enabled = 1
    </select>


    <select id="selectUserAndRoleByIdSelect" resultMap="userRoleMapSelect">
        select
        u.id,
        u.user_name,
        u.user_password,
        u.user_email,
        u.user_info,
        u.head_img,
        u.create_time,
        ur.role_id
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        where u.id = #{userId}

    </select>

    <select id="selectAllUserAndRole" resultMap="userRoleListMap">
        select
        u.id,
        u.user_name,
        u.user_password,
        u.user_email,
        u.user_info,
        u.head_img,
        u.create_time,
        role.id role_id,
        role.role_name role_role_name,
        role.enabled role_enabled,
        role.create_by role_create_by,
        role.create_time role_create_time
        from sys_user u
        inner join sys_user_role user_role on user_role.user_id = u.id
        inner join sys_role role on role.id = user_role.role_id
    </select>

    <select id="selectAllUserAndRoles" resultMap="userRolePrivilegeListMap">
        select
        u.id,
        u.user_name,
        u.user_password,
        u.user_email,
        u.user_info,
        u.head_img,
        u.create_time,
        role.id role_id,
        role.role_name role_role_name,
        role.enabled role_enabled,
        role.create_by role_create_by,
        role.create_time role_create_time,
        p.id role_privilege_id,
        p.privilege_name role_privilege_privilege_name,
        p.privilege_url role_privilege_privilege_url

        from sys_user u
        inner join sys_user_role user_role on user_role.user_id = u.id
        inner join sys_role role on role.id = user_role.role_id
        inner join sys_role_privilege rp on rp.role_id = role.id
        inner join sys_privilege p on rp.privilege_id = p.id
    </select>





</mapper>